user {{ user }};
worker_processes {{ worker_processes }};
pid {{ pid }};

events {
    worker_connections {{connections}};
    # multi_accept on;
}

http {
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    proxy_buffering     off;
    proxy_set_header    X-Real-IP $remote_addr;
    proxy_set_header    X-Scheme $scheme;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    Host $http_host;

    upstream backend {
        ip_hash;
{% for host in groups['appservers'] %}
        server {{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:9000;
{% endfor %}
{% if not groups['appservers']|length %}
        # vagrant doesn't pretend to be an app server
        server 127.0.0.1:9000;
{% endif %}
    }

    server {
        server_name www.{{domain}};
        return 301 $scheme://{{domain}}$request_uri;
    }

    server {
        server_name _ {{domain}};
        listen 80 default_server;

        location / {
            proxy_pass http://backend;
        }
    }
}

